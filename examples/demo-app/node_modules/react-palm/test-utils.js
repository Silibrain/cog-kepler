'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _testUtils = require('./tasks/test-utils');

Object.keys(_testUtils).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _testUtils[key];
    }
  });
});
exports.makeForkUtil = makeForkUtil;


var FORK_RESET_STATE = '__REACT_PALM__FORK_RESET_STATE';


var augmentedReducer = function augmentedReducer(reducer) {
  return function (state, action) {
    if (action.type === FORK_RESET_STATE) {
      return action.state;
    }
    return reducer(state, action);
  };
};

function makeForkUtil(reducer, createStore) {
  // this lets us more eligantly handle tests with dependant setups
  var store = createStore(augmentedReducer(reducer));

  var fork = function fork(title, testFn) {
    var state = store.getState();
    testFn();
    store.dispatch({ type: FORK_RESET_STATE, state: state });
  };

  return { store: store, fork: fork };
}